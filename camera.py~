from pygame import Rect
from collections import namedtuple

#Maintains aspect ratio at all times
#Vector = namedtuple('Vector', ['x', 'y'])
class Vector:
	def __init__(self, x, y):
		self.x = x
		self.y = y
	def __iter__(self):
		return [self.x, self.y]
	def __repr__(self):
		return "Vector(x = {}, y = {})".format(self.x, self.y)

def subVector(v1, v2):
	return Vector(v1.x - v2.x, v1.y - v2.y)
class Camera:
	#pixW: actual width of screen in pixels
	#pixH: actual height of screen in pixels
	#worldW: how many world units desired in viewport (worldH automatically calculated)
	#worldW should evenly divide both pixW and pixH
	def __init__(self, pixW, pixH, worldW):
		self.pixW = pixW
		self.pixH = pixH
		self.worldW = worldW
		self.worldH = pixH * worldW / pixW 
		self.pixelsPerUnit = pixW/worldW
		#top left position in world coordinates
		self.pos = Vector(0, 0)

if __name__ == "__main__":
	print("Testing Camera.py class")
	cam = Camera(480, 320, 30)
	print(cam.worldW, cam.worldH)
	print("PPU", cam.pixelsPerUnit)
	print(cam.pos)
	r = Rect((0, 0),(5, 5))
	print(r)
